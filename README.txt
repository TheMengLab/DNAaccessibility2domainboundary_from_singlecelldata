Overview

1.Introduction
2.Repo Contents
3.System Requirements
4.Installation Guide
5.Demo
6.Results



1.Introduction
The repository contains the codes and script for generating randomly folded 3D structures for chromosomes from DNA accessibility data. The code is written by C and the script is written in bash
Both the source code and the compiled code are presented in the repository. 





2.Repo Contents
prepare: repository to convert DNA accessibility data to the input data prepared for generating and analyzing 3D chromatin structures
analysis: repository to generate ensembles of randomly folded chromosome conformations from folded polymer conformations. Based on these conformations, we can calculate the contact matrix for each chromosome at the resolution of 10-kb and calculate the corresponding separation scores. Finally we can identify the domain boundaries from these separation scores.
boundary_overlap: repository for identifying domain boudnaries from experimental Hi-C data and calculate the overlapping between domain boundaries separately identified from Hi-C data and simulated randomly folded chromosome confrmations.

In the respository ./prepare/data_raw/, there are two types of files obtained from experimental data: 
experimental ATAC data of 500 single are presented under five folders(Rep1,Rep2,..., Rep5) as with 100 files for each folder(cell1.dat, cell2.dat, ..., cell100.dat).
hg19.chrom.sizes: file containing the length of reference genome.

In the respository ./boundary_overlap/boundary_exp/Hi-Cdata/chr1/, there are experimental Hi-C data for chromosome 1, which is used as an demo for identify domain boundaries from Hi-C data.
Also, the respository ./boundary_overlap/boundary_simulation/ is used as an example for identifying the overlaped domain boudnaries separately from Hi-C and simulated random folded chromosome conformation.



The calculation can be roughly divided into 3 steps:
(1) preparation step. In this step, we construct 500 polymer models for each chromosome from DNA accessibility data and generate initial structures of 100,000 bead polymer chain as starting points for randomly folded conformation generation.
command: bash prepareall.sh
(2) simulation step: In this step, we simulate the random folding process of 100,000-bead polymer chains in confined space
command: bash do_simulation.sh
(3) structure analysis: In this step, we first generate conformation ensembles for each chromsomes, based on which we construct contact matrices at the resolution of 10-kb. Then we calculate the separation score for each 10-kb segment and identify the domain boundaries from these contact matrices. In the meanwhile, we also present the code for calculating the distance matrix between segments in chromosome region chr21:29.38Mb-31.33Mb at the resolution of 30-kb
command: bash do_analysis.sh





3.System Requirements
The code is tested on Linux operating systems with the system Ubuntu 16.04
It requires only a standard computer with enough RAM to support the calculation. We recommend a computer with the following specs:

RAM: 8+ GB
CPU: 4+ cores, 3.2+ GHz/core



4.Installation Guide
awk is required before running the script, which can be installed by 

sudo apt-get install mawk

it may take serveral minutes to finish the installation



5.Demo
Just run the three scripts one by one
bash prepareall.sh	#this step is fast and it may take several minutes to finish
bash do_simulation.sh	#this script is designed using one core and it may take weeks to finish this. you can also run this simulation in a parallel way by run the script do_simulation_para.sh to save time(estimated 1-2 days to finish).
bash do_analysis.sh	#it may take several hours to finish



6.Results

output generated by prepareall.sh:

(1)In the folder ./prepare/ATAC_data/Rep[1-5]/individual/[1-100]/bin_10kb/further, there are 23 files(density1.dat, density2.dat, ...) containing ATAC-seq signals assigned to each 10-kb segments. density1.dat for chromosome 1, density2.dat for chromosome 2, and etc. density23.dat for chromosome X.
(2)In the folder ./prepare/assign/1/detail, there are 500 files(assign_10kb_rep1.dat, assign_10kb_rep2.dat ..., assign_10kb_rep500.dat) containing the sequence id of mapped 10-kb segment for each bead in the 500 heteropolymer models of chromosome 1. Similar files for other chromosomes are presented in the directory ./prepare/assign/. For example, ./prepare/assign/2/detail for chromosome 2 and ./prepare/assign/23/detail for chromosome X
(3) In the folder ./simulation/initconf/, there are 10 files(conf1.dat, conf2.dat, ...) containing the xyz coordinates of 100,000 beads of polymer chains. These coordinated are generated by random walk algorithm.
(4) 10 folders (1/, 2/, ...)  are generated in the directory ./simulation/simulation/, for preparing the scripts for calculating 10 random folded conformation of 100,000-bead polymer from initial structures located in the directory ./simulation/initconf/.



Output generated by do_simulation.sh
After the simulation, only 10 output files(as ./simulation/simulation/1/output_10.dat, ./simulation/simulation/2/output_10.dat, ...) containing the coordinates of 100,000 beads of polymers. In each file,these coordinates are saved every 15,000 numerical steps (totally 300,000 numerical steps). The coordinates of the final snapshot are used to represent the generated randomly folded 100,000-bead polymer structures in confined space

Output generated by do_analysis.sh
(1) In the folder ./analysis/mergepoint/, there are ensembles of conformations for 23 chromosomes. For each chromosome, 500 conformations are generated(1_chr1.dat, 2_chr1.dat, ..., 500_chr1.dat for chromosome 1, 1_chr2.dat, 2_chr2.dat, ..., 500_chr2.dat for chromosome 2, and 1_chr23.dat, 2_chr23.dat, ..., 500_chr23.dat for chromosome X). It should be noted here that each row in these files represents the xyz coordinates of one 10-kb segment(not one polymer bead).
(2) The file ./distmatrix/chr21_2938_3133/matrix21_30kb.dat contains the ensemble averaged distance matrix between 65 30-kb segments in the region chr21:29.38Mb-31.33Mb.
(3) In the folder ./analysis/contactmatrix_topline/, there are 23 files(matrix4_chr1_norm_top100.dat,matrix4_chr2_norm_top100.dat,... and matrix4_chr23_norm_top100.dat) containing the ensemble averaged contact matrix for 23 chromosomes at the resolution. In the file matrix4_chr1_norm_top100.dat, there are 24926 rows, representing the contact information for 24926 10-kb segments in chromosome 1, with each row for one segment. In the i-th row, the j-th column element represents the contact frequency between the i-th 10-kb segment and the (i+j)-th 10-kb segment. For example, the element of row 3 and column 4 represent the contact frequency between 3rd segment and 7th segment.
(4) score_topline.dat in the folder ./analysis/contactmatrix_topline/boundary_smallscale_delta0.2/1/ contains the separation scores for 24926 10-kb segments of chromosome 1. The first column of /analysis/contactmatrix_topline/boundary_smallscale_delta0.2/1/targetpeakid.dat represents the positions of identified domain boundaries(the serial number start from 0. for example, the position for the first row is 76, means the 77th 10-kb segment is identified as domain boundary). Files containing the separation scores and domain boundaries for the other chromosomes are also put under the directory ./analysis/contactmatrix_topline/boundary_smallscale_delta0.2/




